services:
  erp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  static-server:
    build:
      context: ./static-server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"

  supply-chain:
    build: 
      context: ./supply-chain
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db_supply_chain

  db_supply_chain:
    image: postgres:latest
    environment:
      DATABASE_HOST: db_supply_chain
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # No need to expose the port to the host if only Docker container access is needed
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supply-chain/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

